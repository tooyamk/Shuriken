srkSetSubProject(${SRK_TOOL_PROJ_PREFIX})

set(exe python)
if (SRK_HOST_OS_WINDOWS)
    set(exe ${exe}.exe)
else ()
    set(exe ${exe}3)
endif ()

set_property(GLOBAL PROPERTY SRKPROJ_TOOL_CPYTHON_NAME ${PROJECT_NAME})
set_property(GLOBAL PROPERTY SRKPROJ_TOOL_CPYTHON_EXE ${PROJECT_BINARY_DIR}/install/bin/${exe})

get_property(SRKPROJ_TOOL_ZLIB_NAME GLOBAL PROPERTY "SRKPROJ_TOOL_ZLIB_NAME")
get_property(SRKPROJ_TOOL_ZLIB_INCLUDE GLOBAL PROPERTY "SRKPROJ_TOOL_ZLIB_INCLUDE")
get_property(SRKPROJ_TOOL_ZLIB_LIB_DIR GLOBAL PROPERTY "SRKPROJ_TOOL_ZLIB_LIB_DIR")

set(major 3)
set(minor 11)
set(gitTag v${major}.${minor}.3)
srkCheckExternalProjectVersion_GitTag(${PROJECT_BINARY_DIR} ${PROJECT_BINARY_DIR}/src ${gitTag})

include(ExternalProject)

ExternalProject_Add(
    ${PROJECT_NAME}
    PREFIX ${PROJECT_BINARY_DIR}
    GIT_REPOSITORY https://github.com/python/cpython.git
    GIT_TAG ${gitTag}
    GIT_SHALLOW 1
    GIT_PROGRESS 1
    TMP_DIR tmp
    STAMP_DIR stamp
    DOWNLOAD_DIR download
    INSTALL_DIR install
    SOURCE_DIR src
    BINARY_DIR ${SRK_PROJECT_BUILD_ROOT_DIR}
    UPDATE_COMMAND ""
    CONFIGURE_COMMAND
        ${CMAKE_COMMAND}
        -DSRK_HOST_OS_LINUX=${SRK_HOST_OS_LINUX}
        -DSRK_HOST_OS_MACOS=${SRK_HOST_OS_MACOS}
        -DSRC_DIR=${CMAKE_CURRENT_BINARY_DIR}/src
        -DBUILD_DIR=${SRK_PROJECT_BUILD_ROOT_DIR}
        -DINSTALL_DIR=${PROJECT_BINARY_DIR}/install
        -P ${CMAKE_CURRENT_SOURCE_DIR}/configure.cmake
    PATCH_COMMAND 
        ${CMAKE_COMMAND}
        -DSRK_HOST_OS_LINUX=${SRK_HOST_OS_LINUX}
        -DSRK_HOST_OS_MACOS=${SRK_HOST_OS_MACOS}
        -DZLIB_INCLUDE=${SRKPROJ_TOOL_ZLIB_INCLUDE}
        -DZLIB_DIR=${SRKPROJ_TOOL_ZLIB_LIB_DIR}
        -DSRC_DIR=${CMAKE_CURRENT_BINARY_DIR}/src
        -P ${CMAKE_CURRENT_SOURCE_DIR}/patch.cmake
    BUILD_COMMAND ""
        ${CMAKE_COMMAND}
        -DSRK_HOST_OS_WINDOWS=${SRK_HOST_OS_WINDOWS}
        -DSRK_HOST_OS_LINUX=${SRK_HOST_OS_LINUX}
        -DSRK_HOST_OS_MACOS=${SRK_HOST_OS_MACOS}
        -DSRK_HOST_ARCH_X86=${SRK_HOST_ARCH_X86}
        -DSRK_HOST_ARCH_ARM=${SRK_HOST_ARCH_ARM}
        -DSRK_HOST_ARCH_WORD_BITS_32=${SRK_HOST_ARCH_WORD_BITS_32}
        -DSRK_HOST_ARCH_WORD_BITS_64=${SRK_HOST_ARCH_WORD_BITS_64}
        -DMAJOR=${major}
        -DMINOR=${minor}
        -DSRC_DIR=${CMAKE_CURRENT_BINARY_DIR}/src
        -DBUILD_DIR=${SRK_PROJECT_BUILD_ROOT_DIR}
        -DINSTALL_DIR=${PROJECT_BINARY_DIR}/install
        -P ${CMAKE_CURRENT_SOURCE_DIR}/build.cmake
    INSTALL_COMMAND
        ${CMAKE_COMMAND}
        -DSRK_HOST_OS_WINDOWS=${SRK_HOST_OS_WINDOWS}
        -DSRK_HOST_OS_LINUX=${SRK_HOST_OS_LINUX}
        -DSRK_HOST_OS_MACOS=${SRK_HOST_OS_MACOS}
        -DMAJOR=${major}
        -DMINOR=${minor}
        -DBUILD_DIR=${SRK_PROJECT_BUILD_ROOT_DIR}
        -DINSTALL_DIR=${PROJECT_BINARY_DIR}/install
        -P ${CMAKE_CURRENT_SOURCE_DIR}/install.cmake
)

if (SRK_HOST_OS_LINUX OR SRK_HOST_OS_MACOS)
    add_dependencies(${PROJECT_NAME} ${SRKPROJ_TOOL_ZLIB_NAME})
endif ()
set_property(TARGET ${PROJECT_NAME} PROPERTY FOLDER ${SRK_TOOLS_DIR_NAME})