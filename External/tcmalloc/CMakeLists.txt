__set_project()
set(__OUTPUT_NAME ${CMAKE_SHARED_LIBRARY_PREFIX}tcmalloc_minimal)
set(LIB_PREFIX ${PROJECT_BINARY_DIR}/install/lib/${__OUTPUT_NAME})
set(LIB_R ${LIB_PREFIX}${SRK_LIB_SUFFIX})
set(LIB_D ${LIB_PREFIX}d${SRK_LIB_SUFFIX})
set_property(GLOBAL PROPERTY PROJECT_TCMALLOC_NAME ${PROJECT_NAME})
set_property(GLOBAL PROPERTY PROJECT_TCMALLOC_INCLUDE ${PROJECT_BINARY_DIR}/install/include)
set_property(GLOBAL PROPERTY PROJECT_TCMALLOC_LIB ${LIB_PREFIX}${SRK_BUILD_TYPE_SUFFIX}${SRK_LIB_SUFFIX})
set_property(GLOBAL PROPERTY PROJECT_TCMALLOC_LIB_R ${LIB_R})
set_property(GLOBAL PROPERTY PROJECT_TCMALLOC_LIB_D ${LIB_D})
set_property(GLOBAL PROPERTY PROJECT_TCMALLOC_DLL ${PROJECT_BINARY_DIR}/install/${SRK_INSTALL_DLL_DIR_NAME}/${__OUTPUT_NAME}${SRK_BUILD_TYPE_SUFFIX}${SRK_DLL_SUFFIX})

include(ExternalProject)

__create_external_project_cmake_args(__CMAKE_ARGS)

ExternalProject_Add(
    ${PROJECT_NAME}
    PREFIX ${PROJECT_BINARY_DIR}
    GIT_REPOSITORY https://github.com/gperftools/gperftools.git
    GIT_TAG gperftools-2.9.1
    GIT_SHALLOW 1
    GIT_PROGRESS 1
    TMP_DIR tmp
    STAMP_DIR stamp
    DOWNLOAD_DIR download
    INSTALL_DIR install
    SOURCE_DIR src
    BINARY_DIR ${SRK_BUILD_DIR}
    UPDATE_COMMAND ""
    BUILD_BYPRODUCTS 
        ${LIB_R}
        ${LIB_D}
    CMAKE_ARGS
        -DGPERFTOOLS_BUILD_CPU_PROFILER=OFF
        -DGPERFTOOLS_BUILD_HEAP_PROFILER=OFF
        -DGPERFTOOLS_BUILD_HEAP_CHECKER=OFF
        -DGPERFTOOLS_BUILD_DEBUGALLOC=OFF
        -Dgperftools_build_minimal=ON
        -Dgperftools_build_benchmark=OFF
        -DBUILD_TESTING=OFF
        ${__CMAKE_ARGS}
)

set_property(TARGET ${PROJECT_NAME} PROPERTY FOLDER ${SRK_EXTERNAL_DIR_NAME})