srkSetProject()

get_property(SRKPROJ_SRK_CORE_NAME GLOBAL PROPERTY "SRKPROJ_SRK_CORE_NAME")
get_property(SRKPROJ_SRK_CORE_INCLUDE GLOBAL PROPERTY "SRKPROJ_SRK_CORE_INCLUDE")
get_property(SRKPROJ_SRK_CORE_DLL GLOBAL PROPERTY "SRKPROJ_SRK_CORE_DLL")

get_property(SRKPROJ_SRK_FRAMEWORK_NAME GLOBAL PROPERTY "SRKPROJ_SRK_FRAMEWORK_NAME")
get_property(SRKPROJ_SRK_FRAMEWORK_INCLUDE GLOBAL PROPERTY "SRKPROJ_SRK_FRAMEWORK_INCLUDE")
get_property(SRKPROJ_SRK_FRAMEWORK_DLL GLOBAL PROPERTY "SRKPROJ_SRK_FRAMEWORK_DLL")

get_property(SRKPROJ_SRK_ASTC_CONVERTER_NAME GLOBAL PROPERTY "SRKPROJ_SRK_ASTC_CONVERTER_NAME")
get_property(SRKPROJ_SRK_ASTC_CONVERTER_OUTPUT_NAME GLOBAL PROPERTY "SRKPROJ_SRK_ASTC_CONVERTER_OUTPUT_NAME")
get_property(SRKPROJ_SRK_ASTC_CONVERTER_DLL GLOBAL PROPERTY "SRKPROJ_SRK_ASTC_CONVERTER_DLL")

get_property(SRKPROJ_SRK_HID_DLL GLOBAL PROPERTY "SRKPROJ_SRK_HID_DLL")

get_property(SRKPROJ_SRK_PNG_CONVERTER_NAME GLOBAL PROPERTY "SRKPROJ_SRK_PNG_CONVERTER_NAME")
get_property(SRKPROJ_SRK_PNG_CONVERTER_OUTPUT_NAME GLOBAL PROPERTY "SRKPROJ_SRK_PNG_CONVERTER_OUTPUT_NAME")
get_property(SRKPROJ_SRK_PNG_CONVERTER_DLL GLOBAL PROPERTY "SRKPROJ_SRK_PNG_CONVERTER_DLL")

get_property(SRKPROJ_SRK_FBX_CONVERTER_NAME GLOBAL PROPERTY "SRKPROJ_SRK_FBX_CONVERTER_NAME")
get_property(SRKPROJ_SRK_FBX_CONVERTER_OUTPUT_NAME GLOBAL PROPERTY "SRKPROJ_SRK_FBX_CONVERTER_OUTPUT_NAME")
get_property(SRKPROJ_SRK_FBX_CONVERTER_DLL GLOBAL PROPERTY "SRKPROJ_SRK_FBX_CONVERTER_DLL")

get_property(SRKPROJ_SRK_SHADER_SCRIPT_NAME GLOBAL PROPERTY "SRKPROJ_SRK_SHADER_SCRIPT_NAME")
get_property(SRKPROJ_SRK_SHADER_SCRIPT_OUTPUT_NAME GLOBAL PROPERTY "SRKPROJ_SRK_SHADER_SCRIPT_OUTPUT_NAME")
get_property(SRKPROJ_SRK_SHADER_SCRIPT_DLL GLOBAL PROPERTY "SRKPROJ_SRK_SHADER_SCRIPT_DLL")

get_property(SRKPROJ_SRK_SHADER_TRANSPILER_NAME GLOBAL PROPERTY "SRKPROJ_SRK_SHADER_TRANSPILER_NAME")
get_property(SRKPROJ_SRK_SHADER_TRANSPILER_DLL GLOBAL PROPERTY "SRKPROJ_SRK_SHADER_TRANSPILER_DLL")

get_property(SRKPROJ_GLEW_DLL GLOBAL PROPERTY "SRKPROJ_GLEW_DLL")
get_property(SRKPROJ_LIBPNG_DLL GLOBAL PROPERTY "SRKPROJ_LIBPNG_DLL")
#get_property(SRKPROJ_SPIRV_CROSS_DLL GLOBAL PROPERTY "SRKPROJ_SPIRV_CROSS_DLL")
get_property(SRKPROJ_ZLIB_DLL GLOBAL PROPERTY "SRKPROJ_ZLIB_DLL")

get_property(SRKPROJ_MIMALLOC_NAME GLOBAL PROPERTY "SRKPROJ_MIMALLOC_NAME")
get_property(SRKPROJ_MIMALLOC_LIB GLOBAL PROPERTY "SRKPROJ_MIMALLOC_LIB")
get_property(SRKPROJ_MIMALLOC_DLL GLOBAL PROPERTY "SRKPROJ_MIMALLOC_DLL")

get_property(SRKPROJ_TCMALLOC_NAME GLOBAL PROPERTY "SRKPROJ_TCMALLOC_NAME")
get_property(SRKPROJ_TCMALLOC_LIB GLOBAL PROPERTY "SRKPROJ_TCMALLOC_LIB")
get_property(SRKPROJ_TCMALLOC_DLL GLOBAL PROPERTY "SRKPROJ_TCMALLOC_DLL")

get_property(SRKPROJ_DX_SHADER_COMPILER_DLL GLOBAL PROPERTY "SRKPROJ_DX_SHADER_COMPILER_DLL")

get_property(SRKPROJ_SRK_GRAPHICS_D3D11_NAME GLOBAL PROPERTY "SRKPROJ_SRK_GRAPHICS_D3D11_NAME")
get_property(SRKPROJ_SRK_GRAPHICS_D3D11_DLL GLOBAL PROPERTY "SRKPROJ_SRK_GRAPHICS_D3D11_DLL")

get_property(SRKPROJ_SRK_GRAPHICS_GL_NAME GLOBAL PROPERTY "SRKPROJ_SRK_GRAPHICS_GL_NAME")
get_property(SRKPROJ_SRK_GRAPHICS_GL_DLL GLOBAL PROPERTY "SRKPROJ_SRK_GRAPHICS_GL_DLL")

get_property(SRKPROJ_SRK_GRAPHICS_VULKAN_NAME GLOBAL PROPERTY "SRKPROJ_SRK_GRAPHICS_VULKAN_NAME")
get_property(SRKPROJ_SRK_GRAPHICS_VULKAN_DLL GLOBAL PROPERTY "SRKPROJ_SRK_GRAPHICS_VULKAN_DLL")

get_property(SRKPROJ_SRK_INPUT_HID_INPUT_NAME GLOBAL PROPERTY "SRKPROJ_SRK_INPUT_HID_INPUT_NAME")
get_property(SRKPROJ_SRK_INPUT_HID_INPUT_DLL GLOBAL PROPERTY "SRKPROJ_SRK_INPUT_HID_INPUT_DLL")

get_property(SRKPROJ_SRK_INPUT_DIRECT_INPUT_NAME GLOBAL PROPERTY "SRKPROJ_SRK_INPUT_DIRECT_INPUT_NAME")
get_property(SRKPROJ_SRK_INPUT_DIRECT_INPUT_DLL GLOBAL PROPERTY "SRKPROJ_SRK_INPUT_DIRECT_INPUT_DLL")

get_property(SRKPROJ_SRK_INPUT_RAW_INPUT_NAME GLOBAL PROPERTY "SRKPROJ_SRK_INPUT_RAW_INPUT_NAME")
get_property(SRKPROJ_SRK_INPUT_RAW_INPUT_DLL GLOBAL PROPERTY "SRKPROJ_SRK_INPUT_RAW_INPUT_DLL")

get_property(SRKPROJ_SRK_INPUT_XINPUT_NAME GLOBAL PROPERTY "SRKPROJ_SRK_INPUT_XINPUT_NAME")
get_property(SRKPROJ_SRK_INPUT_XINPUT_DLL GLOBAL PROPERTY "SRKPROJ_SRK_INPUT_XINPUT_DLL")

include_directories(
    ${SRKPROJ_SRK_CORE_INCLUDE}
    ${SRKPROJ_SRK_FRAMEWORK_INCLUDE}
    ${SRK_SOURCE_DIR}/
)
add_definitions(${SRK_DEFINITIONS})
file(GLOB_RECURSE SRC_FILES "src/*.h" "src/*.cpp")
srkAddExecutableSourceGroup(${PROJECT_NAME} ${SRC_FILES})

set(compilerFlags "-Wl,-rpath=./libs/")
if (SRK_C_COMPILER_CLANG OR SRK_C_COMPILER_GNU)
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${compilerFlags}")
endif ()
if (SRK_CXX_COMPILER_CLANG OR SRK_CXX_COMPILER_GNU)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${compilerFlags}")
endif ()

set(linkLibs
    ${SRKPROJ_SRK_CORE_NAME}
    ${SRKPROJ_SRK_FRAMEWORK_NAME}
    ${SRKPROJ_SRK_ASTC_CONVERTER_NAME}
    ${SRKPROJ_SRK_PNG_CONVERTER_NAME}
    ${SRKPROJ_SRK_FBX_CONVERTER_NAME}
    ${SRKPROJ_SRK_SHADER_SCRIPT_NAME}
)

set(USE_MIMALLOC ON)
set(USE_TCMALLOC OFF)

if (SRK_OS_WINDOWS)
elseif (APPLE)
elseif (UNIX)
    list(APPEND linkLibs
        dl
        pthread
    )
    srkAppendIf(X11_FOUND linkLibs X11)
endif ()

if (SRK_CXX_COMPILER_MSVC)
    macro(_setDelayload)
        set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} /DELAYLOAD:${ARGV0}${CMAKE_DEBUG_POSTFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}")
        set(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} /DELAYLOAD:${ARGV0}${CMAKE_RELEASE_POSTFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}")
        set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO} /DELAYLOAD:${ARGV0}${CMAKE_RELWITHDEBINFO_POSTFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}")
        set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "${CMAKE_EXE_LINKER_FLAGS_MINSIZEREL} /DELAYLOAD:${ARGV0}${CMAKE_MINSIZEREL_POSTFIX}${CMAKE_SHARED_LIBRARY_SUFFIX}")
    endmacro()

    set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS /SUBSYSTEM:WINDOWS)
    _setDelayload(${SRKPROJ_SRK_ASTC_CONVERTER_OUTPUT_NAME})
    _setDelayload(${SRKPROJ_SRK_PNG_CONVERTER_OUTPUT_NAME})
    _setDelayload(${SRKPROJ_SRK_FBX_CONVERTER_OUTPUT_NAME})
    _setDelayload(${SRKPROJ_SRK_SHADER_SCRIPT_OUTPUT_NAME})
endif ()

set(OUTPUT_LIBS_DIR ${SRK_BUILD_DIR}/libs)

add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_SOURCE_DIR}/../Resources/ ${SRK_BUILD_DIR}Resources
)

set(test_pre_build_commands COMMAND ${CMAKE_COMMAND} -E make_directory ${OUTPUT_LIBS_DIR})

srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_SRK_CORE_DLL} ${SRK_BUILD_DIR})
srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_SRK_FRAMEWORK_DLL} ${SRK_BUILD_DIR})
srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_SRK_ASTC_CONVERTER_DLL} ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_SRK_PNG_CONVERTER_DLL} ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_SRK_FBX_CONVERTER_DLL} ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_SRK_SHADER_SCRIPT_DLL} ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_DX_SHADER_COMPILER_DLL} ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_LIBPNG_DLL} ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_ZLIB_DLL} ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_SRK_SHADER_TRANSPILER_DLL} ${OUTPUT_LIBS_DIR})

srkAppendCopyFileCmdIf(GLEW test_pre_build_commands "${SRKPROJ_GLEW_DLL}" ${OUTPUT_LIBS_DIR})
#srkAppendCopyFileCmdIf(SPIRV_CROSS test_pre_build_commands "${SRKPROJ_SPIRV_CROSS_DLL}" ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmdIf(SRK_GRAPHICS_GL test_pre_build_commands "${SRKPROJ_SRK_GRAPHICS_GL_DLL}" ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmdIf(SRK_GRAPHICS_D3D11 test_pre_build_commands "${SRKPROJ_SRK_GRAPHICS_D3D11_DLL}" ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmdIf(SRK_GRAPHICS_VULKAN test_pre_build_commands "${SRKPROJ_SRK_GRAPHICS_VULKAN_DLL}" ${OUTPUT_LIBS_DIR})

srkAppendCopyFileCmdIf(SRK_HID test_pre_build_commands "${SRKPROJ_SRK_HID_DLL}" ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmdIf(SRK_INPUT_DIRECT_INPUT test_pre_build_commands "${SRKPROJ_SRK_INPUT_DIRECT_INPUT_DLL}" ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmdIf(SRK_INPUT_HID_INPUT test_pre_build_commands "${SRKPROJ_SRK_INPUT_HID_INPUT_DLL}" ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmdIf(SRK_INPUT_RAW_INPUT test_pre_build_commands "${SRKPROJ_SRK_INPUT_RAW_INPUT_DLL}" ${OUTPUT_LIBS_DIR})
srkAppendCopyFileCmdIf(SRK_INPUT_XINPUT test_pre_build_commands "${SRKPROJ_SRK_INPUT_XINPUT_DLL}" ${OUTPUT_LIBS_DIR})

set(test_pre_build_depends
    ${SRKPROJ_SRK_FRAMEWORK_NAME}
    ${SRKPROJ_SRK_PNG_CONVERTER_NAME}
    ${SRKPROJ_SRK_FBX_CONVERTER_NAME}
    ${SRKPROJ_SRK_SHADER_SCRIPT_NAME}
    ${SRKPROJ_SRK_SHADER_TRANSPILER_NAME}
)

srkAppendIf(SRK_GRAPHICS_GL test_pre_build_depends "${SRKPROJ_SRK_GRAPHICS_GL_NAME}")
srkAppendIf(SRK_GRAPHICS_D3D11 test_pre_build_depends "${SRKPROJ_SRK_GRAPHICS_D3D11_NAME}")
srkAppendIf(SRK_GRAPHICS_VULKAN test_pre_build_depends "${SRKPROJ_SRK_GRAPHICS_VULKAN_NAME}")

srkAppendIf(SRK_INPUT_DIRECT_INPUT test_pre_build_depends "${SRKPROJ_SRK_INPUT_DIRECT_INPUT_NAME}")
srkAppendIf(SRK_INPUT_HID_INPUT test_pre_build_depends "${SRKPROJ_SRK_INPUT_HID_INPUT_NAME}")
srkAppendIf(SRK_INPUT_RAW_INPUT test_pre_build_depends "${SRKPROJ_SRK_INPUT_RAW_INPUT_NAME}")
srkAppendIf(SRK_INPUT_XINPUT test_pre_build_depends "${SRKPROJ_SRK_INPUT_XINPUT_NAME}")

if (SRK_OS_WINDOWS)
elseif (SRK_OS_LINUX)
endif ()

if (USE_MIMALLOC)
    list(APPEND linkLibs ${SRKPROJ_MIMALLOC_LIB})
    list(APPEND test_pre_build_depends ${SRKPROJ_MIMALLOC_NAME})
    srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_MIMALLOC_DLL} ${SRK_BUILD_DIR})
endif ()
if (USE_TCMALLOC)
    if (SRK_CXX_COMPILER_MSVC)
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /include:__tcmalloc")
    endif ()
    list(APPEND linkLibs ${SRKPROJ_TCMALLOC_LIB})
    list(APPEND test_pre_build_depends ${SRKPROJ_TCMALLOC_NAME})
    srkAppendCopyFileCmd(test_pre_build_commands ${SRKPROJ_TCMALLOC_DLL} ${SRK_BUILD_DIR})
endif ()

add_custom_target(test_pre_build ALL ${test_pre_build_commands})
add_dependencies(test_pre_build ${test_pre_build_depends})

add_dependencies(${PROJECT_NAME} test_pre_build)
target_link_libraries(${PROJECT_NAME} ${linkLibs})
set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME}${SRK_BUILD_TYPE_SUFFIX})