srkSetProject()
set(__OUTPUT_NAME srk-shader-script)
set_property(GLOBAL PROPERTY PROJECT_SRK_SHADER_SCRIPT_NAME ${PROJECT_NAME})
set_property(GLOBAL PROPERTY PROJECT_SRK_SHADER_SCRIPT_CONVERTER_INCLUDE ${PROJECT_SOURCE_DIR}/src/)
set_property(GLOBAL PROPERTY PROJECT_SRK_SHADER_SCRIPT_OUTPUT_NAME ${CMAKE_SHARED_LIBRARY_PREFIX}${__OUTPUT_NAME})
set_property(GLOBAL PROPERTY PROJECT_SRK_SHADER_SCRIPT_DLL ${SRK_BUILD_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}${__OUTPUT_NAME}${SRK_BUILD_TYPE_SUFFIX}${SRK_DLL_SUFFIX})

get_property(PROJECT_SRK_CORE_NAME GLOBAL PROPERTY "PROJECT_SRK_CORE_NAME")
get_property(PROJECT_SRK_CORE_INCLUDE GLOBAL PROPERTY "PROJECT_SRK_CORE_INCLUDE")

get_property(PROJECT_SRK_FRAMEWORK_NAME GLOBAL PROPERTY "PROJECT_SRK_FRAMEWORK_NAME")
get_property(PROJECT_SRK_FRAMEWORK_INCLUDE GLOBAL PROPERTY "PROJECT_SRK_FRAMEWORK_INCLUDE")

include_directories(
    ${PROJECT_SRK_CORE_INCLUDE}
    ${PROJECT_SRK_FRAMEWORK_INCLUDE}
)
add_definitions(${SRK_EXTENSION_DEFINITIONS})
file(GLOB_RECURSE SRC_FILES "src/*.h" "src/*.cpp")
srkAddLibrarySourceGroup(${PROJECT_NAME} SHARED ${SRC_FILES})
add_dependencies(${PROJECT_NAME} 
    ${PROJECT_SRK_FRAMEWORK_NAME}
)
target_link_libraries(${PROJECT_NAME}
    ${PROJECT_SRK_CORE_NAME}
    ${PROJECT_SRK_FRAMEWORK_NAME}
)
set_property(TARGET ${PROJECT_NAME} PROPERTY FOLDER ${SRK_EXTENSIONS_DIR_NAME})
set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME ${__OUTPUT_NAME})
srkInstall(${SRK_EXTENSIONS_DIR_NAME}/${PROJECT_NAME})