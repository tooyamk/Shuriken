srkSetProject()
set(__OUTPUT_NAME srk-framework)
set_property(GLOBAL PROPERTY PROJECT_SRK_FRAMEWORK_NAME ${PROJECT_NAME})
set_property(GLOBAL PROPERTY PROJECT_SRK_FRAMEWORK_INCLUDE ${PROJECT_SOURCE_DIR}/src/)
set_property(GLOBAL PROPERTY PROJECT_SRK_FRAMEWORK_DLL ${SRK_BUILD_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}${__OUTPUT_NAME}${SRK_BUILD_TYPE_SUFFIX}${SRK_DLL_SUFFIX})

get_property(PROJECT_SRK_CORE_NAME GLOBAL PROPERTY "PROJECT_SRK_CORE_NAME")
get_property(PROJECT_SRK_CORE_INCLUDE GLOBAL PROPERTY "PROJECT_SRK_CORE_INCLUDE")

include_directories(
    src
    ${PROJECT_SRK_CORE_INCLUDE}
)
add_definitions(${SRK_DEFINITIONS} -DSRK_FW_EXPORTS)
file(GLOB_RECURSE SRC_FILES "src/*.h" "src/*.cpp")
srkAddLibrarySourceGroup(${PROJECT_NAME} SHARED ${SRC_FILES})
add_dependencies(${PROJECT_NAME} 
    ${PROJECT_SRK_CORE_NAME}
)
set(linkLibs)
if (SRK_OS_WINDOWS)
    list(APPEND linkLibs dxgi.lib winmm.lib)
elseif (SRK_OS_LINUX)
    srkAppendIf(X11_FOUND linkLibs X11)
endif ()
target_link_libraries(${PROJECT_NAME}
    ${PROJECT_SRK_CORE_NAME}
    ${linkLibs}
)
set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME ${__OUTPUT_NAME})
srkInstall(${PROJECT_NAME})

#set(CMAKE_INSTALL_PREFIX ${PROJECT_BINARY_DIR})
#install(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})