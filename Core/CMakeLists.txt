srkSetSubProject(${SRK_PROJ_PREFIX})

set(OUTPUT_NAME ${SRK_OUTPUT_NAME_PREFIX}core)
set_property(GLOBAL PROPERTY SRKPROJ_CORE_NAME ${PROJECT_NAME})
set_property(GLOBAL PROPERTY SRKPROJ_CORE_INCLUDE ${PROJECT_SOURCE_DIR}/src/)
set_property(GLOBAL PROPERTY SRKPROJ_CORE_DLL ${SRK_PROJECT_BUILD_DIR}/${CMAKE_SHARED_LIBRARY_PREFIX}${OUTPUT_NAME}${SRK_BUILD_TYPE_SUFFIX}${SRK_DLL_SUFFIX})

file(GLOB_RECURSE srcFiles "src/*.h" "src/*.cpp")
srkAddLibrarySourceGroup(${PROJECT_NAME} SHARED ${srcFiles})
target_include_directories(${PROJECT_NAME} PUBLIC src)
target_compile_definitions(${PROJECT_NAME} PRIVATE ${SRK_DEFINITIONS} -DSRK_CORE_EXPORTS)

set(linkLibs)
if (NOT SRK_OS_WINDOWS)
    list(APPEND linkLibs dl)
endif ()
if (SRK_OS_ANDROID)
    list(APPEND linkLibs log)
endif ()
target_link_libraries(${PROJECT_NAME} ${linkLibs})

set_target_properties(${PROJECT_NAME} PROPERTIES OUTPUT_NAME ${OUTPUT_NAME})
srkInstall(${PROJECT_NAME})

#set(CMAKE_INSTALL_PREFIX ${PROJECT_BINARY_DIR})
#install(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})